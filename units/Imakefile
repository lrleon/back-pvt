DEPEND = sh ./depend.sh

PVT=/home/lrleon/pvt
ALEPHW = $(shell echo $$ALEPHW)
POCO = $(shell echo $$POCO)
CXXPATH = $(shell echo $$CXXPATH)

CC = $(CXXPATH)/bin/clang
CXX = $(CXXPATH)/bin/clang++

INCLUDES = -I$(ALEPHW) -I$(PVT)/include
WARN= -Wall -Wextra -Wcast-align -Wno-sign-compare -Wno-write-strings -Wno-parentheses
FLAGS = -std=c++14 $(WARN) -O0 -g

OPTIONS = $(FLAGS)
CXXFLAGS= -std=c++14 $(INCLUDES) $(OPTIONS)

LIBSRCS = units.cc 
LIBOBJS = $(LIBSRCS:.cc=.o)


SYSLIBS = -L$(ALEPHW) -lAleph -lstdc++ -lm -lc

TESTSRCS = test-unititem.cc test-unit.cc example-unit.cc test-dynunit.cc \
	test-foo.cc test-temperature.cc

TESTOBJS = $(TESTSRCS:.cc=.o)

SRCS = $(LIBSRCS) $(TESTSRCS)

NormalLibraryObjectRule()

NormalLibraryTarget(utils,$(LIBOBJS))
InstallLibrary(utils,./)

AllTarget(test-unititem)
NormalProgramTarget(test-unititem,test-unititem.o,,,$(SYSLIBS))

AllTarget(test-dynunit)
NormalProgramTarget(test-dynunit,units.o test-dynunit.o,,,$(SYSLIBS))

AllTarget(test-unit)
NormalProgramTarget(test-unit,units.o test-unit.o,,,$(SYSLIBS))

AllTarget(example-unit)
NormalProgramTarget(example-unit,units.o example-unit.o,,,$(SYSLIBS))

AllTarget(test-foo)
NormalProgramTarget(test-foo,units.o test-foo.o,,,$(SYSLIBS))

AllTarget(test-temperature)
NormalProgramTarget(test-temperature,units.o test-temperature.o,,,$(SYSLIBS))

DependTarget()
