DEPEND = sh ./depend.sh

INCLUDES = -I../include -I../units -I$(UCONV)/include -I$(ALEPHW) -I$(JSON)/include
WARN= -Wall -Wextra -Wcast-align -Wno-sign-compare -Wno-write-strings -Wno-parentheses
#OPTFLAGS = -Ofast -DNDEBUG
OPTFLAGS = -O0 -g
FLAGS = -std=c++17 $(WARN) $(OPTFLAGS)

OPTIONS = $(FLAGS)
CXXFLAGS= -std=c++17 $(INCLUDES) $(OPTIONS)

.SUFFIXES: .rb .H .cc

LIBSRCS = correlations-vars.cc pvt-tuner.cc

SRCS = $(LIBSRCS)
OBJS = pvt.o

BIBLIO = $(TOP)/bin/biblio

CORRDIR=$(TOP)/include/correlations/

CORRS=$(shell ls $(CORRDIR)*.rb)

CALLS =	$(CORRS:.rb=.cc)
HCORR =	$(CORRS:.rb=.H) $(shell ls $(CORRDIR)*-impl.H)

HIMPL = $(shell ls $(CORRDIR)*-impl.H)

gitversion.H: ../.git/HEAD ../.git/index
	echo "# define GITVERSION \"$(shell git rev-parse HEAD)\"" > $@

correlations-vars.cc: gitversion.H

clean::
	$(RM) gitversion.H

depend:: gitversion.H

test:
	echo $(CORRS)

biblios.cc: $(TOP)/include/correlations/refs.bib $(TOP)/bin/biblio
	$(RM) $*.cc; 	\	@@\
	$(BIBLIO) -C -f $(CORRDIR)refs.bib | clang-format -style=Mozilla > $@

pvt.cc: $(CALLS) $(HCORR) $(SRCS)				\
	biblios.cc correlations-vars.cc	\
	$(TOP)/include/correlations/pvt-correlations.H	\
	$(TOP)/include/correlations/correlation.H
	$(RM) -f $@;					\	@@\
	cat pvt-tuner.cc >> $@;			\	@@\
	cat biblio-vars.cc >> $@;			\	@@\
	cat biblios.cc >> $@;				\	@@\
	cat correlations-vars.cc >> $@;		\	@@\
	cat $(CALLS) >> $@;				\	@@\
	$(RM) $*.tmp

pvt.o: pvt.cc

clean::
	$(RM) -f pvt.cc biblios.cc libpvt.so libpvt.a libpvtp.a libpvt-op.a

libpvt.so: pvt.cc
	$(RM) -f $@;		\	@@\
	$(CXX) -c -std=c++17 $(INCLUDES) $(OPT) -fpic pvt.cc -o aux1.o;\	@@\
	gcc -shared -o libpvt.so aux1.o; \	@@\
	$(RM) -f aux1.o

libpvt-op.a: pvt.cc
	$(RM) -f $@;		\	@@\
	$(CXX) -c -std=c++17 $(INCLUDES) $(OPT) pvt.cc -o aux2.o;\	@@\
	ar clq libpvt-op.a aux2.o; \	@@\
	ranlib libpvt-op.a; \	@@\
	$(RM) -f aux2.o

libpvtp.a: pvt.cc
	$(RM) -f $@;		\	@@\
	$(CXX) -c -std=c++17 $(INCLUDES) -pg -g -O0 pvt.cc -o aux3.o;\	@@\
	ar clq libpvtp.a aux3.o; \	@@\
	ranlib libpvtp.a; \	@@\
	$(RM) -f aux3.o

all:: libpvt-op.a libpvtp.a

NormalLibraryObjectRule()
NormalLibraryTarget(pvt,$(OBJS))
InstallLibrary(pvt,./)
DependTarget()
