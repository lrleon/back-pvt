#!/usr/bin/env ruby
# -*- coding: iso-8859-1 -*-

require 'optparse'

load 'correlations.rb'

def test_preamble(name)
%Q(
# include <cassert>
# include <tclap/CmdLine.h>
# include <correlations/unittest-utils.H>
# include <correlations/pvt-correlations.H>

using namespace TCLAP;

CmdLine cmd = { \"#{name}\", ' ', \"0\" };

SwitchArg with_call = { "c", "calls", "print calls for failed tests", cmd };

int main(int argc, char *argv[])
{
  CorrelationTester tester;

  cmd.parse(argc, argv);
)
end

def error_msg(msg, name, line)
  fail msg + " for correlation #{name} line #{line}"
end
  
def gen_test(csv_row, correlation, line)
  corr_name = csv_row[0]

  test_result = csv_row["result"]
  error_msg "result value", corr_name, line unless test_result
  
  result_unit = csv_row["result unit"]
  error_msg "result unit", corr_name, line unless result_unit

  epsilon = csv_row['epsilon'] || 1e-1
  
  refs = csv_row.to_a.select { |a| a[0] && a[1] && a[0].start_with?('ref ') }.
         map { |a| a[0].sub('ref ', '').gsub("\"", '') }

  note = csv_row["Note"] || ''

  s = "tester.test(#{line},\n"\
      "Quantity<#{result_unit}>(#{test_result.to_f}),\n"\
      "#{epsilon},\n"\
      "{"
  refs.each do |ref|
    s += "\"#{ref}\""
    s += ", " if ref != refs.last
  end

  s += "},\n"\
       "\"#{note}\",\n"\
       "#{corr_name}::get_instance(),\n"
  
  correlation.pars.each do |par|
    par_name = par.name
    
    test_value = csv_row[par_name]
    error_msg "#{par_name} value not found", corr_name, line unless test_value
    
    test_unit = csv_row[par_name + " unit"]
    error_msg "#{par_name} unit not found", corr_name, line unless test_unit

    s += "Quantity<#{test_unit}>(#{test_value.to_f})"
    s += "," if par != correlation.pars.last
    s += "\n"
  end
  s += ");\n"
end

def test_epilogue
  "tester.summary(with_call.getValue());\n"\
  "}"
end

options = {}
options_parser = OptionParser.new do |opts|

  opts.on('-f NAME', '--file NAME', 
          'file name with correlation tests') do |file_name|
    options[:file_name] = file_name
  end

end

options_parser.parse!

file = options[:file_name]

fail 'correlations file not specified (option -f NAME)' if file.nil?

require 'fileutils'
require 'csv'

rows = CSV.read(file, headers: true)

puts test_preamble File.basename file, '.csv'

rows.each_with_index do |row, line|

  corr = $correlations_tbl[row[0]] # row[0] is the correlation name
  fail "correlation #{row[0]} not found at line #{line + 2}" unless corr
  next if row['disabled']
  puts gen_test row, corr, line + 2
  puts
  
end
puts test_epilogue
