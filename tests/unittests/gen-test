#!/usr/bin/env ruby
# -*- coding: iso-8859-1 -*-

require 'optparse'

load 'correlations.rb'

def test_preamble(name)
%Q(
# include <cassert>
# include <tclap/CmdLine.h>
# include <units/unittest-utils.H>
# include <units/pvt-units.H>

using namespace TCLAP;

CmdLine cmd = { \"#{name}\", ' ', \"0\" };

SwitchArg with_call = { "c", "calls", "print calls for failed tests", cmd };

int main(int argc, char *argv[])
{
  UnitTester tester;

  cmd.parse(argc, argv);
)
end

def error_msg(msg, name, line)
  fail msg + " line #{line}"
end

def load_csv_col(csv_row, name)
  v = csv_row["value"]
  error_msg "#{name} not specified" unless v
  v
end

def stringficate(str)
  "\"#{str}\""
end

def gen_test(csv_name, csv_row, line)

  value = load_csv_col csv_row, 'value'
  src_unit = load_csv_col csv_row , 'convert from'
  tgt_unit = load_csv_col csv_row, 'convert to'
  expected = load_csv_col csv_row, 'result'
  tolerance = load_csv_col csv_row, 'tolerance'

  "    tester.define_test(#{csv_name}\", #{line}, \"#{src_unit}\"\n"\
  "                       \"#{tgt_unit}\", #{value}, #{expected},\n"\
  "                       #{tolerance});\n"
end

def test_epilogue
  "  tester.report();\n"\
  "}"
end

options = {}
options_parser = OptionParser.new do |opts|

  opts.on('-f NAME', '--file NAME', 
          'file name with correlation tests') do |file_name|
    options[:file_name] = file_name
  end

end

options_parser.parse!

file = options[:file_name]

fail 'unit test file not specified (option -f NAME)' if file.nil?

require 'fileutils'
require 'csv'

rows = CSV.read(file, headers: true)

puts test_preamble File.basename file, '.csv'

rows.each_with_index do |row, line|

  corr = $correlations_tbl[row[0]] # row[0] is the correlation name
  fail "correlation #{row[0]} not found at line #{line + 2}" unless corr
  next if row['disabled']
  puts gen_test row, corr, line + 2
  puts
  
end
puts test_epilogue
