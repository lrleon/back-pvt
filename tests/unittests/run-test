#!/usr/bin/env ruby
# -*- coding: iso-8859-1 -*-

require 'optparse'
require 'fileutils'

load 'correlations.rb'

options = {}
options_parser = OptionParser.new do |opts|

  opts.on('-t PROPERTY', '--test PROPERTY', 
          'Property to be tested') do |property_name|
    options[:property_name] = property_name
  end

  opts.on('-l', '--list', 'list properties') do
    options[:list] = true
  end

  opts.on('-c', '--calls', 'print call for failed tests') do
    options[:calls] = true
  end

end

options_parser.parse!

if options[:list]
  list = `ls *.csv`.split
  list.each do |name|
    puts File.basename name, '.csv'
  end
  exit
end

property_name = options[:property_name]

fail "option -t PROPERTY has not been specified" unless property_name

csv_name = "#{property_name}.csv"
cpp_name = "#{property_name}.cc"

fail "#{property_name} is not defined" unless File.exists? csv_name

src = %x{ ./gen-test -f #{csv_name} | clang-format -style=Mozilla }

File.open(cpp_name, 'w') { |f| f.write(src) }

alephw = ENV['ALEPHW']

fail "ALEPHW env var has not been defined" unless alephw

compile_line = "c++ -std=c++14 -I../../include -I#{alephw} "\
               "-std=c++14 -Wall -Wextra -Wcast-align -Wno-sign-compare "\
               "-Wno-write-strings -Wno-parentheses -O0 -g #{cpp_name} "\
               "../../lib/libpvt.a -L#{alephw} -lAleph "\
               "-lstdc++ -lgsl -lgslcblas -lm -lc -o #{property_name}"

puts compile_line

compile_status = system(compile_line)

fail "Test compilation failed" unless compile_status

command_line = "./#{property_name}"
command_line += " -c" if options[:calls]
test_status = system(command_line)

fail "Test has aborted" unless test_status

puts "Test for #{property_name} executed successfully"


